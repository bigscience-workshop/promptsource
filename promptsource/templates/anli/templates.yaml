dataset: anli
templates:
  391acb43-732a-4c09-8c10-e02d226d8854: !Template
    answer_choices:
    - 'No'
    - Neutral
    - 'Yes'
    answer_choices_key: null
    id: 391acb43-732a-4c09-8c10-e02d226d8854
    jinja: 'Sentence 1: {{premise}}

      Sentence 2: {{hypothesis}}

      Question: Does Sentence 1 contradict Sentence 2? Yes, No, or Neutral? |||

      {{answer_choices[label]}}'
    metadata: !TemplateMetadata
      _do_eval: true
      _do_train: false
      choices_in_prompt: null
      metrics: []
      original_task: false
    name: does S1 contradict S2?
    reference: Copied from Victor's prompts for XNLI.
  5459237b-97de-4340-bf7b-2939c3f7ca19: !Template
    answer_choices:
    - 'Yes'
    - Maybe
    - 'No'
    answer_choices_key: null
    id: 5459237b-97de-4340-bf7b-2939c3f7ca19
    jinja: Given that {{premise}} Does it follow that {{hypothesis}} Yes, no, or maybe?
      ||| {{ answer_choices[label] }}
    metadata: !TemplateMetadata
      _do_eval: true
      _do_train: false
      choices_in_prompt: true
      metrics: []
      original_task: true
    name: "given\u2026 does it follow that\u2026 "
    reference: "\"Does it follow that\" could be replaced with \"can we infer that\u2026\
      \ \", \"is it guaranteed that\u2026\", etc. Ideally there should be a question\
      \ mark after \"does it follow that {hypothesis}?\", but the hypothesis string\
      \ often comes with ending punctuations of its own."
  620aa3fc-d5eb-46f5-a1ee-4c754527aa97: !Template
    answer_choices:
    - 'True'
    - Neither
    - 'False'
    answer_choices_key: null
    id: 620aa3fc-d5eb-46f5-a1ee-4c754527aa97
    jinja: '{{premise}}

      Question: {{hypothesis}} True, False, or Neither? ||| {{ answer_choices[label]
      }}'
    metadata: !TemplateMetadata
      _do_eval: true
      _do_train: false
      choices_in_prompt: true
      metrics: []
      original_task: true
    name: GPT-3 style
    reference: 'Same as reported in Figure G7 of the GPT-3 paper, except that there
      is no task identifying tokens like "anli R1: ".'
  9b613182-c6ab-4427-9221-3d68f6d62765: !Template
    answer_choices:
    - 'Yes'
    - Maybe
    - 'No'
    answer_choices_key: null
    id: 9b613182-c6ab-4427-9221-3d68f6d62765
    jinja: '{{premise}} Based on the previous passage, is it true that {{hypothesis}}
      Yes, no, or maybe? ||| {{ answer_choices[label] }}'
    metadata: !TemplateMetadata
      _do_eval: true
      _do_train: false
      choices_in_prompt: true
      metrics: []
      original_task: true
    name: based on the previous passage
    reference: "Adapted from the BoolQ prompts in Schick & Sch\xFCtze 2021."
  cf55f09b-bc68-439d-a9b2-781263509f99: !Template
    answer_choices:
    - 'Yes'
    - Neutral
    - 'No'
    answer_choices_key: null
    id: cf55f09b-bc68-439d-a9b2-781263509f99
    jinja: 'Sentence 1: {{premise}}

      Sentence 2: {{hypothesis}}

      Question: Does Sentence 1 entail Sentence 2? Yes, No, or Neutral? |||

      {{answer_choices[label]}}'
    metadata: !TemplateMetadata
      _do_eval: true
      _do_train: false
      choices_in_prompt: true
      metrics: []
      original_task: true
    name: does S1 entail S2?
    reference: Copied from Victor's prompts for XNLI.
  e0e8b914-c32c-4c85-8b8f-0f61ae79e2b3: !Template
    answer_choices:
    - must be true
    - might be true
    - must be false
    answer_choices_key: null
    id: e0e8b914-c32c-4c85-8b8f-0f61ae79e2b3
    jinja: Given that {{premise}}, it {{"must be true, might be true, or must be false"}}
      that {{hypothesis}}? ||| It {{ answer_choices[label] }}.
    metadata: !TemplateMetadata
      _do_eval: true
      _do_train: false
      choices_in_prompt: true
      metrics: []
      original_task: true
    name: "given\u2026 it must be true that\u2026"
    reference: 'Maybe a little verbose for a generative model, but anecdotally this
      is the most natural way of how I say an NLI sentence pair out loud to humans.
      Caveat: NLI annotations are not meant to be strictly truth-conditional entailment,
      so "must" is not ideal.'
