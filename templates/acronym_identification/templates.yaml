dataset: acronym_identification
templates:
  81babc83-18cd-4eed-a343-8ede56b21df5: !Template
    id: 81babc83-18cd-4eed-a343-8ede56b21df5
    jinja:
      "Given the BIO encoding as follows:  \"{{\"B-short\"}}\" and \"{{\"I-short\"\
      }}\" represent the beginning and intermediate tokens for abbreviations.\"{{\"\
      B-long\"}}\" and \"{{\"I-long\"}}\" represent the beginning and intermediate\
      \ tokens for expansions of the abbreviations. All other tokens are represented\
      \ by \"{{\"O\"}}\". \nGenerate comma-separated BIO encoding for the following\
      \ comma-separated tokens: \n\n{{tokens|join(', ')}}.\n|||\n{% for label in labels\
      \ %}{{[\"B-long\", \"B-short\", \"I-long\",  \"I-short\", \"O\"][label]}}{%\
      \ if not loop.last %},{%endif %}{% endfor %}\n"
    name: bio_encode
    reference: Given the comma separated tokens, generate BIO encoding for abbreviations.
    task_template: true
  8832e5f7-7c45-46da-b85f-71fcb444f264: !Template
    id: 8832e5f7-7c45-46da-b85f-71fcb444f264
    jinja:
      "Find all the expansions of the acronyms present in the following comma-separated\
      \ tokens: \n\n{{tokens|join(', ')}}\n|||\n{% set abbr_string=namespace(value='')\
      \ %}\n{% set answer_list=namespace(value=[]) %}\n{% for label_idx in range(labels|length)\
      \ %}\n{% if labels[label_idx] == 0 %}\n{% set abbr_string.value = tokens[label_idx]\
      \ %}\n{% elif abbr_string.value!='' and labels[label_idx]==2%}\n{% set abbr_string.value\
      \ = abbr_string.value+' '+tokens[label_idx] %}\n{% elif abbr_string.value!=''\
      \ and labels[label_idx]!=2%}\n{% set answer_list.value = answer_list.value +[abbr_string.value]\
      \ %}\n{% set abbr_string.value = '' %}\n{% endif %}\n{% if loop.last and abbr_string.value!=''\
      \ %}\n{% set answer_list.value = answer_list.value +[abbr_string.value] %}\n\
      {% endif %}\n{% endfor %}\n{% if answer_list.value|length!=0 %}\n{{ answer_list.value|join(',\
      \ ') }}\n{% else %}\nNo expansions found.\n{% endif %}"
    name: find_expansions
    reference: Given the tokens, find the expansion tokens.
    task_template: false
  cae58242-cde9-472d-ae9e-56fc7e79c0d1: !Template
    id: cae58242-cde9-472d-ae9e-56fc7e79c0d1
    jinja:
      "Find all the acryonyms in the following comma-separated tokens: \n\n{{tokens|join(',\
      \ ')}}\n|||\n{% set abbr_string=namespace(value='') %}\n{% set answer_list=namespace(value=[])\
      \ %}\n{% for label_idx in range(labels|length) %}\n{% if labels[label_idx] ==\
      \ 1 %}\n{% set abbr_string.value = tokens[label_idx] %}\n{% elif abbr_string.value!=''\
      \ and labels[label_idx]==3%}\n{% set abbr_string.value = abbr_string.value+tokens[label_idx]\
      \ %}\n{% elif abbr_string.value!='' and labels[label_idx]!=3 %}\n{% set answer_list.value\
      \ = answer_list.value +[abbr_string.value] %}\n{% set abbr_string.value = ''\
      \ %}\n{% endif %}\n{% if loop.last and abbr_string.value!='' %}\n{% set answer_list.value\
      \ = answer_list.value +[abbr_string.value] %}\n{% endif %}\n{% endfor %}\n{{\
      \ answer_list.value|join(', ') }}"
    name: find_abbreviations
    reference: Given the tokens, find the abbreviations.
    task_template: false
